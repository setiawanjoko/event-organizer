-- This script was generated by the ERD tool in pgAdmin 4.
-- Please log an issue at https://redmine.postgresql.org/projects/pgadmin4/issues/new if you find any bugs, including reproduction steps.
BEGIN;


CREATE TABLE IF NOT EXISTS public.categories
(
    id character varying(22) COLLATE pg_catalog."default" NOT NULL,
    category character varying(15) COLLATE pg_catalog."default" NOT NULL,
    created_at timestamp with time zone NOT NULL DEFAULT CURRENT_TIMESTAMP,
    updated_at timestamp with time zone NOT NULL DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT pk_categories_id PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.event_categories
(
    event_id character varying(19) COLLATE pg_catalog."default" NOT NULL,
    category_id character varying(22) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT pk_event_categories_id PRIMARY KEY (event_id, category_id)
);

CREATE TABLE IF NOT EXISTS public.event_organizers
(
    event_id character varying(19) COLLATE pg_catalog."default" NOT NULL,
    organizer_id character varying(23) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT pk_event_organizers_id PRIMARY KEY (event_id, organizer_id)
);

CREATE TABLE IF NOT EXISTS public.events
(
    id character varying(19) COLLATE pg_catalog."default" NOT NULL,
    title character varying(50) COLLATE pg_catalog."default" NOT NULL,
    location character varying(50) COLLATE pg_catalog."default" NOT NULL,
    date_time timestamp with time zone NOT NULL,
    is_open boolean NOT NULL DEFAULT false,
    created_at timestamp with time zone NOT NULL DEFAULT CURRENT_TIMESTAMP,
    updated_at timestamp with time zone NOT NULL DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT pk_events_id PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.organizers
(
    id character varying(23) COLLATE pg_catalog."default" NOT NULL,
    organizer character varying(50) COLLATE pg_catalog."default" NOT NULL,
    email character varying(50) COLLATE pg_catalog."default",
    phone character varying(15) COLLATE pg_catalog."default",
    created_at timestamp with time zone NOT NULL DEFAULT CURRENT_TIMESTAMP,
    updated_at timestamp with time zone NOT NULL DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT pk_organizers_id PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.user_affiliations
(
    user_id character varying(18) COLLATE pg_catalog."default" NOT NULL,
    organizer_id character varying(23) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT pk_user_affiliation_id PRIMARY KEY (user_id, organizer_id)
);

CREATE TABLE IF NOT EXISTS public.users
(
    id character varying(18) COLLATE pg_catalog."default" NOT NULL,
    name character varying(50) COLLATE pg_catalog."default" NOT NULL,
    email character varying(50) COLLATE pg_catalog."default" NOT NULL,
    password character varying(72) COLLATE pg_catalog."default" NOT NULL,
    created_at timestamp with time zone NOT NULL DEFAULT CURRENT_TIMESTAMP,
    updated_at timestamp with time zone NOT NULL DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT pk_users_id PRIMARY KEY (id)
);

ALTER TABLE IF EXISTS public.event_categories
    ADD CONSTRAINT fk_event_categories_category_id_categories_id FOREIGN KEY (category_id)
    REFERENCES public.categories (id) MATCH SIMPLE
    ON UPDATE CASCADE
    ON DELETE RESTRICT;


ALTER TABLE IF EXISTS public.event_categories
    ADD CONSTRAINT fk_event_categories_event_id_events_id FOREIGN KEY (event_id)
    REFERENCES public.events (id) MATCH SIMPLE
    ON UPDATE CASCADE
    ON DELETE RESTRICT;


ALTER TABLE IF EXISTS public.event_organizers
    ADD CONSTRAINT fk_event_organizers_event_id_events_id FOREIGN KEY (event_id)
    REFERENCES public.events (id) MATCH SIMPLE
    ON UPDATE CASCADE
    ON DELETE RESTRICT;


ALTER TABLE IF EXISTS public.event_organizers
    ADD CONSTRAINT fk_event_organizers_organizer_id_organizers_id FOREIGN KEY (organizer_id)
    REFERENCES public.organizers (id) MATCH SIMPLE
    ON UPDATE CASCADE
    ON DELETE RESTRICT;


ALTER TABLE IF EXISTS public.user_affiliations
    ADD CONSTRAINT fk_user_affiliations_organizer_id_organizers_id FOREIGN KEY (organizer_id)
    REFERENCES public.organizers (id) MATCH SIMPLE
    ON UPDATE CASCADE
    ON DELETE RESTRICT;


ALTER TABLE IF EXISTS public.user_affiliations
    ADD CONSTRAINT fk_user_affiliations_user_id_users_id FOREIGN KEY (user_id)
    REFERENCES public.users (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;

END;